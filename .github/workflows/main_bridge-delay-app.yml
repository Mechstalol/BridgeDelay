name: Build and deploy container to Azure Web App – bridge-delay-app

on:
  push:
    branches: [main]            # build on every push to main
  workflow_dispatch:            # manual trigger

env:
  REGISTRY: bridgealertacr.azurecr.io
  REPOSITORY: bridge-delay-app
  TAG: latest                   # 👈 always overwrite :latest
  IMAGE: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.TAG }}

jobs:
# ───────────────────────────────────────────────
# 1️⃣  BUILD & PUSH
# ───────────────────────────────────────────────
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    # Log in to ACR (password-based secrets you already store)
    - name: Log in to ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # Build & push the image
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ env.IMAGE }}      # -> bridgealertacr.azurecr.io/bridge-delay-app:latest

# ───────────────────────────────────────────────
# 2️⃣  DEPLOY TO WEB APP
# ───────────────────────────────────────────────
  deploy:
    runs-on: ubuntu-latest
    needs: build                 # wait for the image
    permissions:
      id-token: write            # OIDC login to Azure
      contents: read

    steps:
    # Azure federated login (you already have these three IDs as secrets)
    - name: Azure login (OIDC)
      uses: azure/login@v2
      with:
        client-id:       ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Tell the Web App to pull the freshly-pushed :latest image
    - name: Deploy to Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: bridge-delay-app
        images:   ${{ env.IMAGE }}   # same URL as in the build step
